% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_coastlines.R
\name{get_coastline}
\alias{get_coastline}
\title{Return the MEaSURES coastline for a given extent}
\usage{
get_coastline(
  extent = "",
  rectangularExtent = TRUE,
  preferType = NULL,
  useOnly = NULL,
  imbieBasins = NULL,
  crs = NULL,
  crsIn = NULL
)
}
\arguments{
\item{extent}{Define the extent used to crop the coastline. This argument
is fed into \code{\link[=get_extent]{get_extent()}}; see there for details of valid input.}

\item{rectangularExtent}{If 'extent' is a defined string (e.g. "Amery"),
the 'rectangularExtent' argument determines whether the actual outline is
returned (FALSE; the default), or if the rectangular extent of the
bounding box encompassing the area is returned (TRUE). If multiple ice
shelves and/or basins are included, the extent box will extend over all
of them at once.}

\item{preferType}{Sometimes an ice shelf and the refined MEaSURES basins
have the same name.

Usually they both refer to the same general area, and by default (i.e.
'preferType' = NULL), this function combines both the shelf and basin
extents to form a new larger extent.

However, for some names (e.g. "Shackleton" and "Drygalski"), the name
refers to an ice shelf far away from the basin with the same name,
returning an unexpected extent.

This argument lets the user choose between the two types if the name is
found in both the ice shelves and basins datasets: "shelf", "shelves",
"floating" or "FL" to return the ice shelves; "basin", "basins",
"grounded" or "GR" to return the basins. All other names that aren't in
both the ice shelves and basins datasets will be returned regardless of
this option. See also 'useOnly'.}

\item{useOnly}{If there is a vector containing both ice shelf and basin
names, but only one or the other should be included, use this argument.
Ice shelves or basins are specified as outlined in the 'preferType'
argument.}

\item{imbieBasins}{BINARY: Should the IMBIE basins (TRUE) or the refined
MEaSURES basins (FALSE) be used to define the extent? If NULL (the
default), both the IMBIE and refined basins are returned.

The IMBIE basins are larger, and have codes (e.g. "A-Ap"); the refined
MEaSURES basins are smaller, "sub" regions, and are named after glaciers
(hence their names can overlap with ice shelf names).

This argument is mainly useful if the extent is a vector containing both
names, but only one should be used. Otherwise, just enter only IMBIE or
refined basin names.

\strong{Note:} This argument is distinct from the 'returnImbie' argument used
in functions such as \code{get_shelf_outline()} and \code{get_basin_outline()}.}

\item{crs}{"string": Which projection should the coastline be returned in?
See \code{use_crs()} or \code{terra::crs()}. By default (i.e. NULL), it will match
the first RCM data defined in the ".Rprofile".}

\item{crsIn}{"string": This only needs defining if the 'extent' argument is
a SpatExtent, which don't store projection information. This argument
tells the function which projection the extent was defined in.}
}
\description{
This function is useful for plotting the Antarctic coastline
(i.e. the most seaward part of the ice, either grounded or ice shelf).
The coastline is that from the MEaSURES dataset (Version 2; Mouginot et
al., 2017).

The extent is defined according to \code{\link[=get_extent]{get_extent()}}, and any coastline that
intersects with the extent is returned. This function is mainly for use
in the \code{\link[=draw_antarctica]{draw_antarctica()}} function.
}
\examples{
-----------------------------------------------------------------
\dontrun{
  # Full coastline
  t1 <- get_coastline()
  terra::plot(t1)

  # Coastline of a single shelf
  t2 <- get_coastline("Amery")
  terra::plot(t2)

  # Coastline of separate shelves
  t3 <- get_coastline(c("Amery", "West"), rectangularExtent = FALSE)
  terra::plot(t3)

  # All coastlines in the bounding box around multiple shelves
  t4 <- get_coastline(c("Amery", "West"), rectangularExtent = TRUE)
  terra::plot(t4)

  # Compare preferType options
  t4 <- get_coastline("Drygalski", preferType = NULL)
  terra::plot(t4)

  t5 <- get_coastline("Drygalski", preferType = "shelves")
  terra::plot(t5)

  t6 <- get_coastline("Drygalski", preferType = "basins")
  terra::plot(t6)
}
}
