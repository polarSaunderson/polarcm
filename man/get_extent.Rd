% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_extent.R
\name{get_extent}
\alias{get_extent}
\title{Return the extent of different Antarctic boundaries}
\usage{
get_extent(
  extent = "",
  rectangularExtent = FALSE,
  preferType = NULL,
  useOnly = NULL,
  imbieBasins = NULL,
  crs = NULL,
  crsIn = NULL
)
}
\arguments{
\item{extent}{Multiple types are allowed as input.

If 'extent' is an empty string (i.e. "", the default), the whole of
Antarctica is returned.

If 'extent' is a defined string (e.g. "Amery"), basins and ice shelves in
the MEaSURES dataset with those names are returned; if the same name
refers to both an ice shelf and a basin (e.g. "Shackleton"), 'preferType'
determines which is returned.

A vector of multiple ice shelf/basin names can also be used at once; if
that vector contains both ice shelves and basins but only one type is
required, use the 'useOnly' argument.

If a defined string, by default the exact outline of the ice shelf or
basin is returned, but 'rectangularExtent' can be set for a bounding box
instead.

If 'extent' is a SpatRaster or SpatVector, then the extent of the
SpatRaster or SpatVector will be returned.

If 'extent' is a SpatExtent, it is necessary to also set the 'crsIn'
argument, and a SpatExtent will be returned.}

\item{rectangularExtent}{If 'extent' is a defined string (e.g. "Amery"),
the 'rectangularExtent' argument determines whether the actual outline is
returned (FALSE; the default), or if the rectangular extent of the
bounding box encompassing the area is returned (TRUE). If multiple ice
shelves and/or basins are included, the extent box will extend over all
of them at once.}

\item{preferType}{Sometimes an ice shelf and the refined MEaSURES basins
have the same name.

Usually they both refer to the same general area, and by default (i.e.
'preferType' = NULL), this function combines both the shelf and basin
extents to form a new larger extent.

However, for some names (e.g. "Shackleton" and "Drygalski"), the name
refers to an ice shelf far away from the basin with the same name,
returning an unexpected extent.

This argument lets the user choose between the two types if the name is
found in both the ice shelves and basins datasets: "shelf", "shelves",
"floating" or "FL" to return the ice shelves; "basin", "basins",
"grounded" or "GR" to return the basins. All other names that aren't in
both the ice shelves and basins datasets will be returned regardless of
this option. See also 'useOnly'.}

\item{useOnly}{If there is a vector containing both ice shelf and basin
names, but only one or the other should be included, use this argument.
Ice shelves or basins are specified as outlined in the 'preferType'
argument.}

\item{imbieBasins}{BINARY: Should the IMBIE basins (TRUE) or the refined
MEaSURES basins (FALSE) be used to define the extent? If NULL (the
default), both the IMBIE and refined basins are returned.

The IMBIE basins are larger, and have codes (e.g. "A-Ap"); the refined
MEaSURES basins are smaller, "sub" regions, and are named after glaciers
(hence their names can overlap with ice shelf names).

This argument is mainly useful if the extent is a vector containing both
names, but only one should be used. Otherwise, just enter only IMBIE or
refined basin names.

\strong{Note:} This argument is distinct from the 'returnImbie' argument used
in functions such as \code{\link[=get_shelf_outline]{get_shelf_outline()}} and \code{\link[=get_basin_outline]{get_basin_outline()}}.}

\item{crs}{"string": Which crs should the extent be returned in? See
\code{\link[=use_crs]{use_crs()}} or \code{\link[terra:crs]{terra::crs()}}. By default (i.e. NULL), it will
match the first RCM data defined in the ".Rprofile".}

\item{crsIn}{"string": This only needs defining if the 'extent' argument is
a SpatExtent, which don't store projection information. This argument
tells the function which projection the extent was defined in.}
}
\description{
This function helps us to very easily crop and/or plot data
for parts of Antarctica. It is very flexible in what it accepts, but is
particularly useful when entering MEaSURES ice shelf or basin names.
However, it can also handle other SpatRasters, SpatVectors, or
SpatExtents, allowing it to be used in different contexts. The extent can
be returned in different projections via the 'crs' argument. The returned
extent can be either exact shape outlines (if applicable) or a
rectangular SpatExtent.
}
\examples{
-----------------------------------------------------------------
\dontrun{
  # Full Antarctic extent
  t1 <- get_extent()
  terra::plot(t1)

  # Single shelf
  t2 <- get_extent("Amery")
  terra::plot(t2)

  # Single basin
  t3 <- get_extent("Dry Valleys")
  terra::plot(t3)

  # Name appears in both the ice shelf and basins datasets
  t4 <- get_extent("Shackleton")
  terra::plot(t4)

  # Extent covers both the ice shelf and basin
  t5 <- get_extent("Shackleton", rectangularExtent = TRUE)
  terra::plot(t5)

  # Prefer the shelf
  t6 <- get_extent("Shackleton", preferType = "shelf")
  terra::plot(t6)

  # Prefer the basin
  t7 <- get_extent("Shackleton", preferType = "basin")
  terra::plot(t7)

  # Multiple shelves and basins
  t8 <- get_extent(c("Amery", "Shackleton", "West", "Dry Valleys"),
                   preferType = "NULL")
  terra::plot(t8)

  # Multiple shelves & basins, prefer the shelves
  # Result = no Shackleton basin
  t9 <- get_extent(c("Amery", "Shackleton", "West", "Dry Valleys"),
                   preferType = "shelf")
  terra::plot(t9)

  # Multiple shelves & basins; useOnly shelves
  # Result = no Shackleton & Dry Valleys basins
  t10 <- get_extent(c("Amery", "Shackleton", "West", "Dry Valleys"),
                    useOnly = "shelf")
  terra::plot(t10)

  # Multiple shelves & basins; useOnly basins
  # Result = no Shackleton, Amery & West shelves
  t11 <- get_extent(c("Amery", "Shackleton", "West", "Dry Valleys"),
                    useOnly = "basins")
  terra::plot(t11)
}
}
